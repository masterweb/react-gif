{"version":3,"sources":["components/AddcCategory.js","components/GifgridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddcCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifgridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEQ,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,mCACA,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,yCAAf,UACI,qBAAKA,UAAU,eAAeC,IAAMF,EAAMG,IAAMJ,IAChD,qBAAKE,UAAU,YAAf,SACI,mBAAGA,UAAU,YAAb,SAA2BF,c,uBCRlCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAcZY,GAdY,4CAAH,sDCIPK,EAAU,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAIvB,ECNwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,UAMlBC,EDZuBK,CAAanB,GAA/BoB,EAAZ,EAAOd,KAAYO,EAAnB,EAAmBA,QAQnB,OACI,eAAC,WAAD,WACI,6BAAMb,IACLa,GAAW,wCACZ,qBAAKjB,UAAU,MAAf,SAGYwB,EAAMZ,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADGA,EAAIhB,aEM7B4B,EA3BM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAcA,cAAkBA,IAChC,uBAEA,qBAAKkB,UAAU,YAAf,SAEQ0B,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAA8BA,SAAaA,GAAxBA,Y,MClB3CuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3209fd95.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddcCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit = {handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                \r\n                />\r\n            </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddcCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifgridItem = ({ id, title, url }) => {\r\n    return (\r\n        <>\r\n        <div className=\"col-md-3\">        \r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <img className=\"card-img-top\" src={ url } alt={ title }/>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{ title }</p>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=OJUphd8aPHP6WuGSB8VcM0xUms6qDmY9`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }            \r\n    } );\r\n\r\n    // console.log(gifs)\r\n    return gifs;\r\n    \r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport { Fragment } from 'react';\r\nimport { GifgridItem } from './GifgridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [image, setImages] = useState([])\r\n    // CUSTOM HOOK\r\n    const {data:image, loading} = useFetchGifs(category);\r\n    \r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //     .then( imgs => setImages( imgs ) )\r\n    // },[ category ] )\r\n\r\n    \r\n    return (\r\n        <Fragment>        \r\n            <h3>{ category }</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"row\">\r\n                \r\n                    {\r\n                        image.map(img => \r\n                            <GifgridItem \r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                        )\r\n                    }\r\n                \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            } )\r\n    } )\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport { AddcCategory } from './components/AddcCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories( [...categories, 'HunterX'] );\r\n    //     setCategories( cats => [ ...cats, 'HunterX' ] )\r\n    // }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddcCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n        \r\n            <div className=\"container\">\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid  key =  { category } category = { category } />\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}